// test-db.js - Jednoduch√Ω test datab√°zov√©ho p≈ôipojen√≠ pro IVY projekt
// Spu≈°tƒõn√≠: node test-db.js
// Verze: 2025-07-28 11:25:00 - MariaDB kompatibiln√≠ syntax

import mysql from 'mysql2/promise';
import { readFileSync } from 'fs';

async function testDatabaseConnection() {
    console.log('========================================');
    console.log('üîç TEST DATAB√ÅZOV√âHO P≈òIPOJEN√ç');
    console.log('========================================');
    console.log(`ƒåas: ${new Date().toLocaleString('cs-CZ')}`);
    
    // Naƒçti verzi z package.json
    try {
        const packageJson = JSON.parse(readFileSync('./package.json', 'utf8'));
        console.log(`IVY verze: ${packageJson.version} (${packageJson.versionCode})`);
    } catch (error) {
        console.log('IVY verze: nezn√°m√° (package.json nenalezen)');
    }
    console.log('');

    try {
        // Kontrola environment variables
        console.log('üìã Kontrola environment variables:');
        console.log('----------------------------------------');
        
        const config = {
            host: process.env.DB_HOST,
            user: process.env.DB_USER,
            password: process.env.DB_PASS,
            database: process.env.DB_NAME,
            timeout: 10000,
            acquireTimeout: 10000,
            connectTimeout: 10000
        };
        
        // Zobrazit konfiguraci (bez hesla)
        console.log(`‚úÖ DB_HOST: ${config.host || 'CHYB√ç'}`);
        console.log(`‚úÖ DB_USER: ${config.user || 'CHYB√ç'}`);
        console.log(`‚úÖ DB_NAME: ${config.database || 'CHYB√ç'}`);
        console.log(`‚úÖ DB_PASS: ${config.password ? '[NASTAVENO]' : 'CHYB√ç'}`);
        console.log('');
        
        // Ovƒõ≈ôit ≈æe v≈°echny promƒõnn√© jsou dostupn√©
        if (!config.host || !config.user || !config.password || !config.database) {
            console.log('‚ùå CHYBA: Chyb√≠ datab√°zov√© promƒõnn√©');
            console.log('');
            console.log('Naƒçti promƒõnn√© pomoc√≠:');
            console.log('source ~/.bashrc');
            process.exit(1);
        }
        
        // Test p≈ôipojen√≠
        console.log('üîå Test p≈ôipojen√≠ k datab√°zi:');
        console.log('----------------------------------------');
        console.log('üîÑ P≈ôipojuji se k datab√°zi...');
        
        const connection = await mysql.createConnection(config);
        
        // Test dotaz
        console.log('‚úÖ P≈ôipojen√≠ √∫spƒõ≈°n√©, testuji dotaz...');
        const [rows] = await connection.execute(
            "SELECT 'P≈ôipojen√≠ OK' AS Status, NOW() AS Cas"
        );
        
        console.log('‚úÖ Datab√°zov√© p≈ôipojen√≠ √öSPƒö≈†N√â');
        console.log('');
        console.log('üìä Datab√°zov√© informace:');
        console.log(`   Status: ${rows[0].Status}`);
        console.log(`   ƒåas: ${rows[0].Cas}`);
        
        // Test z√°kladn√≠ch tabulek
        console.log('');
        console.log('üîç Test z√°kladn√≠ch tabulek:');
        console.log('----------------------------------------');
        
        const tables = ['system_config', 'users', 'ui_commands', 'actions'];
        for (const table of tables) {
            try {
                const [result] = await connection.execute(`SELECT COUNT(*) as count FROM ${table} LIMIT 1`);
                console.log(`‚úÖ Tabulka ${table}: ${result[0].count} z√°znam≈Ø`);
            } catch (error) {
                console.log(`‚ùå Tabulka ${table}: ${error.message}`);
            }
        }
        
        await connection.end();
        
        console.log('');
        console.log('üéâ V≈†ECHNY TESTY PRO≈†LY!');
        console.log('Datab√°zov√© p≈ôipojen√≠ funguje spr√°vnƒõ.');
        
    } catch (error) {
        console.log('‚ùå Datab√°zov√© p≈ôipojen√≠ SELHALO');
        console.log('');
        console.log('üìã Detail chyby:', error.message);
        console.log('üìã Error code:', error.code);
        console.log('üìã Error errno:', error.errno);
        console.log('');
        console.log('Mo≈æn√© p≈ô√≠ƒçiny:');
        console.log('- ≈†patn√© heslo nebo u≈æivatelsk√© jm√©no');
        console.log(`- Datab√°ze nen√≠ dostupn√° na ${process.env.DB_HOST}`);
        console.log(`- Datab√°ze ${process.env.DB_NAME} neexistuje`);
        console.log('- Firewall blokuje p≈ôipojen√≠');
        console.log('- S√≠≈•ov√Ω probl√©m nebo timeout');
        console.log('- Nekompatibiln√≠ verze mysql2 a MariaDB');
        
        if (error.code === 'ER_MALFORMED_PACKET') {
            console.log('');
            console.log('üö® SPECI√ÅLN√ç PROBL√âM: ER_MALFORMED_PACKET');
            console.log('Tato chyba m≈Ø≈æe b√Ωt zp≈Øsobena:');
            console.log('- Nekompatibiln√≠ verze mysql2 bal√≠ƒçku');
            console.log('- ≈†patn√° konfigurace character setu');
            console.log('- Po≈°kozen√© s√≠≈•ov√© spojen√≠');
            console.log('- SSL/TLS probl√©my');
        }
        
        process.exit(1);
    }
}

// Spustit test
testDatabaseConnection();